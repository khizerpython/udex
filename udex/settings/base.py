"""
Django settings for udex project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from django.urls import reverse_lazy
import os
import json
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent #add .parent when you make settings a folder
TEMPLATE_DIR = BASE_DIR / 'web_app' / 'templates'


load_dotenv()
load_dotenv(dotenv_path=BASE_DIR / "secrets.env") # Load env variables to be used in entire application

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-jz3q^%(1dv975b=hj)k0y317b^gttww*021mmlg2o=19*b&)-t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ["127.0.0.1"]

STATIC_CUSTOM_DIR = BASE_DIR / "static"


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web_app',
]


LOGIN_REDIRECT_URL = reverse_lazy("homepage_view")
LOGOUT_REDIRECT_URL = reverse_lazy("login_url")
LOGIN_URL = reverse_lazy("login_url")

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'web_app.middleware.encrypt_decrypt_middleware.EcryptDecryptMiddleware', # Custom encrypt/decrypt middleware
]

ROOT_URLCONF = 'udex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'web_app.context_processors.side_menus_context_processor',
            ],
        },
    },
]



WSGI_APPLICATION = 'udex.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



# export DJANGO_SETTINGS_MODULE='skylift.settings.development'
# export DB_NAME='courier'
# export DB_HOST='localhost'
# export DB_PORT=3306
# export DB_USER='root'
# export DB_PASSWORD=''
# export ALLOWED_HOSTS='["http://127.0.0.1:8000/","127.0.0.1"]'


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'udex',
#         'USER': 'root',
#         'PASSWORD': '',
#         'HOST':'localhost',
#         'PORT':'3306',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Karachi'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [STATIC_CUSTOM_DIR]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "web_app.AuthUser"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server
EMAIL_PORT = 587  # Port for TLS (starttls)
EMAIL_USE_TLS = True  # Use TLS (Transport Layer Security)
# EMAIL_HOST_USER = 'khizerkhan0326@gmail.com'  # Your Gmail address
# EMAIL_HOST_PASSWORD = 'xbub lxhe bvjt esnh'  # Your Gmail app password (or regular password if less secure apps are allowed)
# DEFAULT_FROM_EMAIL = 'khizerkhan0326@gmail.com'  # The "from" email address for sent emails
# ADMIN_EMAIL= 'khizerkhan736@gmail.com'


EMAIL_HOST_USER = os.environ.get("DJANGO_EMAIL_HOST_USER", "test-Key")
EMAIL_HOST_PASSWORD = os.environ.get("DJANGO_EMAIL_HOST_PASSWORD", "test-Key")
DEFAULT_FROM_EMAIL =  os.environ.get("DJANGO_DEFAULT_FROM_EMAIL", "test-Key")
ADMIN_EMAIL= os.environ.get("DJANGO_ADMIN_EMAIL", "test-Key")

# ADMINS = (
#   (os.getenv("ADMIN_NAME", "No Name Found"), os.getenv("ADMIN_EMAIL", "developers@rapidcompute.com")),
# ) 

ADMINS = (
    ("Admin", "khizerkhan736@gmail.com"),
)

ADMIN_EMAIL_GET_CONTACT_US_EMAIL = os.environ.get("DJANGO_ADMIN_EMAIL_GET_CONTACT_US_EMAIL", "khizerkhan736@gmail.com") #To get contact us email



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    
    'handlers': {
        
        'mail_admins': {
            'level': 'ERROR',
            'class': 'udex.reporter.CustomAdminEmailHandler',
            
        },
        
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    }
}