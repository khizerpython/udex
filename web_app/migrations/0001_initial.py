# Generated by Django 5.1.4 on 2024-12-15 12:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_app.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^([a-zA-Z]+)((\\s)([a-zA-Z]+))*$', message='Department name must be alphabetic')])),
                ('description', models.CharField(blank=True, max_length=350, null=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\-_,.@&%\\"\' \\n]*$', message='Invalid Description')])),
                ('is_deleted', models.BooleanField(default=False)),
                ('department_under', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=350, null=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\-_,.@&%\\"\' \\n]*$', message='Invalid Description')])),
                ('is_deleted', models.BooleanField(default=False)),
                ('department_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^([a-zA-Z]+)((\\s)([a-zA-Z]+))*$', message='First name must be Alphabetic')])),
                ('last_name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^([a-zA-Z]+)((\\s)([a-zA-Z]+))*$', message='Last name must be Alphabetic')])),
                ('username', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator('^(?=[A-Za-z]{1})([a-zA-Z0-9@#_.-]){3,25}$', message='invalid username, can only contain characters in between 3-25 range. String range 3-25')])),
                ('email', models.EmailField(max_length=255)),
                ('contact_number', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('((\\+923|03)[\\d]{9}$|(09)[\\d]{8}$|(92)[\\d]{10}$|(^\\d{11})$)', message='Please enter valid contact number')])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=30)),
                ('dob', models.DateField()),
                ('is_lock', models.BooleanField(default=False)),
                ('is_first_login', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('city_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.city')),
                ('department_id', models.ManyToManyField(to='web_app.department')),
                ('designation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.designation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FailedLogin',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('failed_login_dateime', models.DateTimeField(auto_now_add=True)),
                ('failed_login_ip_address', models.GenericIPAddressField()),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.authuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FailedResetPasswordAttempt',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('failed_login_ip_address', models.GenericIPAddressField()),
                ('generated_url', models.CharField(max_length=255)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.authuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('order', models.IntegerField(default=1)),
                ('url', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^([a-zA-Z_]*){1,255}$', message='Please enter valid URL name')])),
                ('inner_menu_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_inner_menu_of', to='web_app.menus')),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_parent_id', to='web_app.menus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('order', models.IntegerField(default=1)),
                ('is_hod_right', models.BooleanField(blank=True, default=False, null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('menu_ids', models.ManyToManyField(blank=True, null=True, to='web_app.menus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='authuser',
            name='role_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web_app.role'),
        ),
    ]
